The best way to understand what the *menu chat* is all about is to
play with it for a while. It is composed of two parts

  1. A realtime database used for chat messages and posts.
  2. A http server that the app uses to post images.
  3. Redis, that is used as message broker and database.
  4. The app, refered to as the occase-app.

If we disregard images a typical deployment looks like this
                                                                    
         App1     App2    App3     App4    App5     App6          
           \       /        \       /        \       /            
            \     /          \     /          \     /             
             \   /            \   /            \   /              
              \ /              \ /              \ /               
             rtdb1            rtdb2            rtdb3              
                \               |               /                 
                 \              |              /                  
                  \             |             /                   
                   \__________Redis__________/                    

The apps and the rtdb are connected via a websocket connection that is
never closed by the server.  When app1 wants to send a chat message to
app5 we have to following sequence of operations

  1. Apps log in the rtdb, that may not be same instance.
  2. Rtdb subscribe to notifications of messages that may be sent to
     the apps.
  3. App1 sends a message to rtdb1 that in turn send it to redis,
     where it is stored in the apps queue.
  4. If app5 is connected, redis sends a notification to App5 that
     there is a new message.
  5. Rtdb5 retrieves the message from redis and sends it the app.

The rtdb is a single threaded process, there is no limits on how many
such services can be instantiated.

App
---

The following types of messages are sent from the app to the server.

  1. Posts
  2. Chat messages.
  3. Presence.
  4. Requests for filenames.

In the case of posts we have the following

  1. The app request filenames from the rtdb.
  2. The app uses the filenames to post the images to the image
     server. It will check if the filenames are valid.
  3. When finished posting images, a post is sent to rtdb with the
     links to the images.

This is a squetsh of arquitecture behind images


                                        app1
                                         /
                                        /
         HTTP                          /                               
  app ---------- Img-Server ------- CDN----- app2
                                       \                 
                                        \                
                                         \               
                                        app3             

